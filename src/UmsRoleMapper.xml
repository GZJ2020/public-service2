<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="/.UmsRoleMapper">
	<resultMap id="BaseResultMap" type="cn.sz.gz.pojo.UmsRole">
		<id column="roleId" jdbcType="BIGINT" property="roleid" />
		<result column="description" jdbcType="VARCHAR"
			property="description" />
		<result column="admin_count" jdbcType="VARCHAR"
			property="adminCount" />
		<result column="sort" jdbcType="BIGINT" property="sort" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		roleId, description, admin_count, sort
	</sql>
	<select id="selectByExample"
		parameterType="cn.sz.gz.pojo.UmsRoleExample" resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from ums_role
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from ums_role
		where roleId = #{roleid,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from ums_role
		where roleId = #{roleid,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample"
		parameterType="cn.sz.gz.pojo.UmsRoleExample">
		delete from ums_role
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="cn.sz.gz.pojo.UmsRole">
		insert into ums_role (roleId, description, admin_count,
		sort)
		values (#{roleid,jdbcType=BIGINT}, #{description,jdbcType=VARCHAR},
		#{adminCount,jdbcType=VARCHAR},
		#{sort,jdbcType=BIGINT})
	</insert>
	<insert id="insertSelective"
		parameterType="cn.sz.gz.pojo.UmsRole">
		insert into ums_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="roleid != null">
				roleId,
			</if>
			<if test="description != null">
				description,
			</if>
			<if test="adminCount != null">
				admin_count,
			</if>
			<if test="sort != null">
				sort,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="roleid != null">
				#{roleid,jdbcType=BIGINT},
			</if>
			<if test="description != null">
				#{description,jdbcType=VARCHAR},
			</if>
			<if test="adminCount != null">
				#{adminCount,jdbcType=VARCHAR},
			</if>
			<if test="sort != null">
				#{sort,jdbcType=BIGINT},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="cn.sz.gz.pojo.UmsRoleExample"
		resultType="java.lang.Integer">
		select count(*) from ums_role
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update ums_role
		<set>
			<if test="record.roleid != null">
				roleId = #{record.roleid,jdbcType=BIGINT},
			</if>
			<if test="record.description != null">
				description = #{record.description,jdbcType=VARCHAR},
			</if>
			<if test="record.adminCount != null">
				admin_count = #{record.adminCount,jdbcType=VARCHAR},
			</if>
			<if test="record.sort != null">
				sort = #{record.sort,jdbcType=BIGINT},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update ums_role
		set roleId = #{record.roleid,jdbcType=BIGINT},
		description = #{record.description,jdbcType=VARCHAR},
		admin_count = #{record.adminCount,jdbcType=VARCHAR},
		sort = #{record.sort,jdbcType=BIGINT}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="cn.sz.gz.pojo.UmsRole">
		update ums_role
		<set>
			<if test="description != null">
				description = #{description,jdbcType=VARCHAR},
			</if>
			<if test="adminCount != null">
				admin_count = #{adminCount,jdbcType=VARCHAR},
			</if>
			<if test="sort != null">
				sort = #{sort,jdbcType=BIGINT},
			</if>
		</set>
		where roleId = #{roleid,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="cn.sz.gz.pojo.UmsRole">
		update ums_role
		set description = #{description,jdbcType=VARCHAR},
		admin_count = #{adminCount,jdbcType=VARCHAR},
		sort = #{sort,jdbcType=BIGINT}
		where roleId = #{roleid,jdbcType=BIGINT}
	</update>
	<resultMap id="BaseResultMap" type="cn.sz.gz.pojo.UmsRole">
		<id column="roleId" jdbcType="BIGINT" property="roleid" />
		<result column="description" jdbcType="VARCHAR"
			property="description" />
		<result column="admin_count" jdbcType="VARCHAR"
			property="adminCount" />
		<result column="sort" jdbcType="BIGINT" property="sort" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		roleId, description, admin_count, sort
	</sql>
	<select id="selectByExample"
		parameterType="cn.sz.gz.pojo.UmsRoleExample" resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from ums_role
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from ums_role
		where roleId = #{roleid,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from ums_role
		where roleId = #{roleid,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample"
		parameterType="cn.sz.gz.pojo.UmsRoleExample">
		delete from ums_role
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="cn.sz.gz.pojo.UmsRole">
		insert into ums_role (roleId, description, admin_count,
		sort)
		values (#{roleid,jdbcType=BIGINT}, #{description,jdbcType=VARCHAR},
		#{adminCount,jdbcType=VARCHAR},
		#{sort,jdbcType=BIGINT})
	</insert>
	<insert id="insertSelective"
		parameterType="cn.sz.gz.pojo.UmsRole">
		insert into ums_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="roleid != null">
				roleId,
			</if>
			<if test="description != null">
				description,
			</if>
			<if test="adminCount != null">
				admin_count,
			</if>
			<if test="sort != null">
				sort,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="roleid != null">
				#{roleid,jdbcType=BIGINT},
			</if>
			<if test="description != null">
				#{description,jdbcType=VARCHAR},
			</if>
			<if test="adminCount != null">
				#{adminCount,jdbcType=VARCHAR},
			</if>
			<if test="sort != null">
				#{sort,jdbcType=BIGINT},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="cn.sz.gz.pojo.UmsRoleExample"
		resultType="java.lang.Integer">
		select count(*) from ums_role
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update ums_role
		<set>
			<if test="record.roleid != null">
				roleId = #{record.roleid,jdbcType=BIGINT},
			</if>
			<if test="record.description != null">
				description = #{record.description,jdbcType=VARCHAR},
			</if>
			<if test="record.adminCount != null">
				admin_count = #{record.adminCount,jdbcType=VARCHAR},
			</if>
			<if test="record.sort != null">
				sort = #{record.sort,jdbcType=BIGINT},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update ums_role
		set roleId = #{record.roleid,jdbcType=BIGINT},
		description = #{record.description,jdbcType=VARCHAR},
		admin_count = #{record.adminCount,jdbcType=VARCHAR},
		sort = #{record.sort,jdbcType=BIGINT}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="cn.sz.gz.pojo.UmsRole">
		update ums_role
		<set>
			<if test="description != null">
				description = #{description,jdbcType=VARCHAR},
			</if>
			<if test="adminCount != null">
				admin_count = #{adminCount,jdbcType=VARCHAR},
			</if>
			<if test="sort != null">
				sort = #{sort,jdbcType=BIGINT},
			</if>
		</set>
		where roleId = #{roleid,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="cn.sz.gz.pojo.UmsRole">
		update ums_role
		set description = #{description,jdbcType=VARCHAR},
		admin_count = #{adminCount,jdbcType=VARCHAR},
		sort = #{sort,jdbcType=BIGINT}
		where roleId = #{roleid,jdbcType=BIGINT}
	</update>
	<resultMap id="BaseResultMap" type="cn.sz.gz.pojo.UmsRole">
		<id column="roleId" jdbcType="BIGINT" property="roleid" />
		<result column="description" jdbcType="VARCHAR"
			property="description" />
		<result column="admin_count" jdbcType="VARCHAR"
			property="adminCount" />
		<result column="sort" jdbcType="BIGINT" property="sort" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		roleId, description, admin_count, sort
	</sql>
	<select id="selectByExample"
		parameterType="cn.sz.gz.pojo.UmsRoleExample" resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from ums_role
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from ums_role
		where roleId = #{roleid,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from ums_role
		where roleId = #{roleid,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample"
		parameterType="cn.sz.gz.pojo.UmsRoleExample">
		delete from ums_role
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="cn.sz.gz.pojo.UmsRole">
		insert into ums_role (roleId, description, admin_count,
		sort)
		values (#{roleid,jdbcType=BIGINT}, #{description,jdbcType=VARCHAR},
		#{adminCount,jdbcType=VARCHAR},
		#{sort,jdbcType=BIGINT})
	</insert>
	<insert id="insertSelective"
		parameterType="cn.sz.gz.pojo.UmsRole">
		insert into ums_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="roleid != null">
				roleId,
			</if>
			<if test="description != null">
				description,
			</if>
			<if test="adminCount != null">
				admin_count,
			</if>
			<if test="sort != null">
				sort,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="roleid != null">
				#{roleid,jdbcType=BIGINT},
			</if>
			<if test="description != null">
				#{description,jdbcType=VARCHAR},
			</if>
			<if test="adminCount != null">
				#{adminCount,jdbcType=VARCHAR},
			</if>
			<if test="sort != null">
				#{sort,jdbcType=BIGINT},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="cn.sz.gz.pojo.UmsRoleExample"
		resultType="java.lang.Integer">
		select count(*) from ums_role
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update ums_role
		<set>
			<if test="record.roleid != null">
				roleId = #{record.roleid,jdbcType=BIGINT},
			</if>
			<if test="record.description != null">
				description = #{record.description,jdbcType=VARCHAR},
			</if>
			<if test="record.adminCount != null">
				admin_count = #{record.adminCount,jdbcType=VARCHAR},
			</if>
			<if test="record.sort != null">
				sort = #{record.sort,jdbcType=BIGINT},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update ums_role
		set roleId = #{record.roleid,jdbcType=BIGINT},
		description = #{record.description,jdbcType=VARCHAR},
		admin_count = #{record.adminCount,jdbcType=VARCHAR},
		sort = #{record.sort,jdbcType=BIGINT}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="cn.sz.gz.pojo.UmsRole">
		update ums_role
		<set>
			<if test="description != null">
				description = #{description,jdbcType=VARCHAR},
			</if>
			<if test="adminCount != null">
				admin_count = #{adminCount,jdbcType=VARCHAR},
			</if>
			<if test="sort != null">
				sort = #{sort,jdbcType=BIGINT},
			</if>
		</set>
		where roleId = #{roleid,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="cn.sz.gz.pojo.UmsRole">
		update ums_role
		set description = #{description,jdbcType=VARCHAR},
		admin_count = #{adminCount,jdbcType=VARCHAR},
		sort = #{sort,jdbcType=BIGINT}
		where roleId = #{roleid,jdbcType=BIGINT}
	</update>
	<resultMap id="BaseResultMap" type="cn.sz.gz.pojo.UmsRole">
		<id column="roleId" jdbcType="BIGINT" property="roleid" />
		<result column="description" jdbcType="VARCHAR"
			property="description" />
		<result column="admin_count" jdbcType="VARCHAR"
			property="adminCount" />
		<result column="sort" jdbcType="BIGINT" property="sort" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		roleId, description, admin_count, sort
	</sql>
	<select id="selectByExample"
		parameterType="cn.sz.gz.pojo.UmsRoleExample" resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from ums_role
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from ums_role
		where roleId = #{roleid,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from ums_role
		where roleId = #{roleid,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample"
		parameterType="cn.sz.gz.pojo.UmsRoleExample">
		delete from ums_role
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="cn.sz.gz.pojo.UmsRole">
		insert into ums_role (roleId, description, admin_count,
		sort)
		values (#{roleid,jdbcType=BIGINT}, #{description,jdbcType=VARCHAR},
		#{adminCount,jdbcType=VARCHAR},
		#{sort,jdbcType=BIGINT})
	</insert>
	<insert id="insertSelective"
		parameterType="cn.sz.gz.pojo.UmsRole">
		insert into ums_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="roleid != null">
				roleId,
			</if>
			<if test="description != null">
				description,
			</if>
			<if test="adminCount != null">
				admin_count,
			</if>
			<if test="sort != null">
				sort,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="roleid != null">
				#{roleid,jdbcType=BIGINT},
			</if>
			<if test="description != null">
				#{description,jdbcType=VARCHAR},
			</if>
			<if test="adminCount != null">
				#{adminCount,jdbcType=VARCHAR},
			</if>
			<if test="sort != null">
				#{sort,jdbcType=BIGINT},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="cn.sz.gz.pojo.UmsRoleExample"
		resultType="java.lang.Integer">
		select count(*) from ums_role
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update ums_role
		<set>
			<if test="record.roleid != null">
				roleId = #{record.roleid,jdbcType=BIGINT},
			</if>
			<if test="record.description != null">
				description = #{record.description,jdbcType=VARCHAR},
			</if>
			<if test="record.adminCount != null">
				admin_count = #{record.adminCount,jdbcType=VARCHAR},
			</if>
			<if test="record.sort != null">
				sort = #{record.sort,jdbcType=BIGINT},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update ums_role
		set roleId = #{record.roleid,jdbcType=BIGINT},
		description = #{record.description,jdbcType=VARCHAR},
		admin_count = #{record.adminCount,jdbcType=VARCHAR},
		sort = #{record.sort,jdbcType=BIGINT}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="cn.sz.gz.pojo.UmsRole">
		update ums_role
		<set>
			<if test="description != null">
				description = #{description,jdbcType=VARCHAR},
			</if>
			<if test="adminCount != null">
				admin_count = #{adminCount,jdbcType=VARCHAR},
			</if>
			<if test="sort != null">
				sort = #{sort,jdbcType=BIGINT},
			</if>
		</set>
		where roleId = #{roleid,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="cn.sz.gz.pojo.UmsRole">
		update ums_role
		set description = #{description,jdbcType=VARCHAR},
		admin_count = #{adminCount,jdbcType=VARCHAR},
		sort = #{sort,jdbcType=BIGINT}
		where roleId = #{roleid,jdbcType=BIGINT}
	</update>
	<resultMap id="BaseResultMap" type="cn.sz.gz.pojo.UmsRole">
		<id column="roleId" jdbcType="BIGINT" property="roleid" />
		<result column="description" jdbcType="VARCHAR"
			property="description" />
		<result column="admin_count" jdbcType="VARCHAR"
			property="adminCount" />
		<result column="sort" jdbcType="BIGINT" property="sort" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		roleId, description, admin_count, sort
	</sql>
	<select id="selectByExample"
		parameterType="cn.sz.gz.pojo.UmsRoleExample" resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from ums_role
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from ums_role
		where roleId = #{roleid,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from ums_role
		where roleId = #{roleid,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample"
		parameterType="cn.sz.gz.pojo.UmsRoleExample">
		delete from ums_role
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="cn.sz.gz.pojo.UmsRole">
		insert into ums_role (roleId, description, admin_count,
		sort)
		values (#{roleid,jdbcType=BIGINT}, #{description,jdbcType=VARCHAR},
		#{adminCount,jdbcType=VARCHAR},
		#{sort,jdbcType=BIGINT})
	</insert>
	<insert id="insertSelective"
		parameterType="cn.sz.gz.pojo.UmsRole">
		insert into ums_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="roleid != null">
				roleId,
			</if>
			<if test="description != null">
				description,
			</if>
			<if test="adminCount != null">
				admin_count,
			</if>
			<if test="sort != null">
				sort,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="roleid != null">
				#{roleid,jdbcType=BIGINT},
			</if>
			<if test="description != null">
				#{description,jdbcType=VARCHAR},
			</if>
			<if test="adminCount != null">
				#{adminCount,jdbcType=VARCHAR},
			</if>
			<if test="sort != null">
				#{sort,jdbcType=BIGINT},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="cn.sz.gz.pojo.UmsRoleExample"
		resultType="java.lang.Integer">
		select count(*) from ums_role
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update ums_role
		<set>
			<if test="record.roleid != null">
				roleId = #{record.roleid,jdbcType=BIGINT},
			</if>
			<if test="record.description != null">
				description = #{record.description,jdbcType=VARCHAR},
			</if>
			<if test="record.adminCount != null">
				admin_count = #{record.adminCount,jdbcType=VARCHAR},
			</if>
			<if test="record.sort != null">
				sort = #{record.sort,jdbcType=BIGINT},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update ums_role
		set roleId = #{record.roleid,jdbcType=BIGINT},
		description = #{record.description,jdbcType=VARCHAR},
		admin_count = #{record.adminCount,jdbcType=VARCHAR},
		sort = #{record.sort,jdbcType=BIGINT}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="cn.sz.gz.pojo.UmsRole">
		update ums_role
		<set>
			<if test="description != null">
				description = #{description,jdbcType=VARCHAR},
			</if>
			<if test="adminCount != null">
				admin_count = #{adminCount,jdbcType=VARCHAR},
			</if>
			<if test="sort != null">
				sort = #{sort,jdbcType=BIGINT},
			</if>
		</set>
		where roleId = #{roleid,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="cn.sz.gz.pojo.UmsRole">
		update ums_role
		set description = #{description,jdbcType=VARCHAR},
		admin_count = #{adminCount,jdbcType=VARCHAR},
		sort = #{sort,jdbcType=BIGINT}
		where roleId = #{roleid,jdbcType=BIGINT}
	</update>
</mapper>