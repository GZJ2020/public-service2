<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="/.FundOrderMapper">
	<resultMap id="BaseResultMap" type="cn.sz.gz.pojo.FundOrder">
		<id column="fundorderId" jdbcType="BIGINT" property="fundorderid" />
		<result column="fundID" jdbcType="BIGINT" property="fundid" />
		<result column="userID" jdbcType="BIGINT" property="userid" />
		<result column="fundName" jdbcType="VARCHAR"
			property="fundname" />
		<result column="fundCompanyName" jdbcType="VARCHAR"
			property="fundcompanyname" />
		<result column="undCode" jdbcType="BIGINT" property="undcode" />
		<result column="transactionType" jdbcType="VARCHAR"
			property="transactiontype" />
		<result column="transactionDate" jdbcType="TIMESTAMP"
			property="transactiondate" />
		<result column="netValue" jdbcType="DOUBLE" property="netvalue" />
		<result column="accumulated_Net" jdbcType="DOUBLE"
			property="accumulatedNet" />
		<result column="valuation" jdbcType="DOUBLE"
			property="valuation" />
		<result column="money" jdbcType="DOUBLE" property="money" />
		<result column="amountOfMoney" jdbcType="DOUBLE"
			property="amountofmoney" />
		<result column="handlingFee" jdbcType="DOUBLE"
			property="handlingfee" />
		<result column="payType" jdbcType="VARCHAR" property="paytype" />
		<result column="bankCard" jdbcType="BIGINT" property="bankcard" />
		<result column="bankType" jdbcType="VARCHAR"
			property="banktype" />
		<result column="dividendType" jdbcType="VARCHAR"
			property="dividendtype" />
		<result column="orderStatus" jdbcType="VARCHAR"
			property="orderstatus" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		fundorderId, fundID, userID, fundName, fundCompanyName, undCode, transactionType,
		transactionDate, netValue, accumulated_Net, valuation, money,
		amountOfMoney, handlingFee,
		payType, bankCard, bankType, dividendType, orderStatus
	</sql>
	<select id="selectByExample"
		parameterType="cn.sz.gz.pojo.FundOrderExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from fund_order
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from fund_order
		where fundorderId = #{fundorderid,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from fund_order
		where fundorderId = #{fundorderid,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample"
		parameterType="cn.sz.gz.pojo.FundOrderExample">
		delete from fund_order
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="cn.sz.gz.pojo.FundOrder">
		insert into fund_order (fundorderId, fundID, userID,
		fundName, fundCompanyName, undCode,
		transactionType, transactionDate, netValue,
		accumulated_Net, valuation, money,
		amountOfMoney, handlingFee, payType,
		bankCard, bankType, dividendType,
		orderStatus)
		values (#{fundorderid,jdbcType=BIGINT}, #{fundid,jdbcType=BIGINT},
		#{userid,jdbcType=BIGINT},
		#{fundname,jdbcType=VARCHAR}, #{fundcompanyname,jdbcType=VARCHAR}, #{undcode,jdbcType=BIGINT},
		#{transactiontype,jdbcType=VARCHAR},
		#{transactiondate,jdbcType=TIMESTAMP}, #{netvalue,jdbcType=DOUBLE},
		#{accumulatedNet,jdbcType=DOUBLE}, #{valuation,jdbcType=DOUBLE},
		#{money,jdbcType=DOUBLE},
		#{amountofmoney,jdbcType=DOUBLE}, #{handlingfee,jdbcType=DOUBLE}, #{paytype,jdbcType=VARCHAR},
		#{bankcard,jdbcType=BIGINT}, #{banktype,jdbcType=VARCHAR},
		#{dividendtype,jdbcType=VARCHAR},
		#{orderstatus,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective"
		parameterType="cn.sz.gz.pojo.FundOrder">
		insert into fund_order
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="fundorderid != null">
				fundorderId,
			</if>
			<if test="fundid != null">
				fundID,
			</if>
			<if test="userid != null">
				userID,
			</if>
			<if test="fundname != null">
				fundName,
			</if>
			<if test="fundcompanyname != null">
				fundCompanyName,
			</if>
			<if test="undcode != null">
				undCode,
			</if>
			<if test="transactiontype != null">
				transactionType,
			</if>
			<if test="transactiondate != null">
				transactionDate,
			</if>
			<if test="netvalue != null">
				netValue,
			</if>
			<if test="accumulatedNet != null">
				accumulated_Net,
			</if>
			<if test="valuation != null">
				valuation,
			</if>
			<if test="money != null">
				money,
			</if>
			<if test="amountofmoney != null">
				amountOfMoney,
			</if>
			<if test="handlingfee != null">
				handlingFee,
			</if>
			<if test="paytype != null">
				payType,
			</if>
			<if test="bankcard != null">
				bankCard,
			</if>
			<if test="banktype != null">
				bankType,
			</if>
			<if test="dividendtype != null">
				dividendType,
			</if>
			<if test="orderstatus != null">
				orderStatus,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="fundorderid != null">
				#{fundorderid,jdbcType=BIGINT},
			</if>
			<if test="fundid != null">
				#{fundid,jdbcType=BIGINT},
			</if>
			<if test="userid != null">
				#{userid,jdbcType=BIGINT},
			</if>
			<if test="fundname != null">
				#{fundname,jdbcType=VARCHAR},
			</if>
			<if test="fundcompanyname != null">
				#{fundcompanyname,jdbcType=VARCHAR},
			</if>
			<if test="undcode != null">
				#{undcode,jdbcType=BIGINT},
			</if>
			<if test="transactiontype != null">
				#{transactiontype,jdbcType=VARCHAR},
			</if>
			<if test="transactiondate != null">
				#{transactiondate,jdbcType=TIMESTAMP},
			</if>
			<if test="netvalue != null">
				#{netvalue,jdbcType=DOUBLE},
			</if>
			<if test="accumulatedNet != null">
				#{accumulatedNet,jdbcType=DOUBLE},
			</if>
			<if test="valuation != null">
				#{valuation,jdbcType=DOUBLE},
			</if>
			<if test="money != null">
				#{money,jdbcType=DOUBLE},
			</if>
			<if test="amountofmoney != null">
				#{amountofmoney,jdbcType=DOUBLE},
			</if>
			<if test="handlingfee != null">
				#{handlingfee,jdbcType=DOUBLE},
			</if>
			<if test="paytype != null">
				#{paytype,jdbcType=VARCHAR},
			</if>
			<if test="bankcard != null">
				#{bankcard,jdbcType=BIGINT},
			</if>
			<if test="banktype != null">
				#{banktype,jdbcType=VARCHAR},
			</if>
			<if test="dividendtype != null">
				#{dividendtype,jdbcType=VARCHAR},
			</if>
			<if test="orderstatus != null">
				#{orderstatus,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="cn.sz.gz.pojo.FundOrderExample"
		resultType="java.lang.Integer">
		select count(*) from fund_order
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update fund_order
		<set>
			<if test="record.fundorderid != null">
				fundorderId = #{record.fundorderid,jdbcType=BIGINT},
			</if>
			<if test="record.fundid != null">
				fundID = #{record.fundid,jdbcType=BIGINT},
			</if>
			<if test="record.userid != null">
				userID = #{record.userid,jdbcType=BIGINT},
			</if>
			<if test="record.fundname != null">
				fundName = #{record.fundname,jdbcType=VARCHAR},
			</if>
			<if test="record.fundcompanyname != null">
				fundCompanyName = #{record.fundcompanyname,jdbcType=VARCHAR},
			</if>
			<if test="record.undcode != null">
				undCode = #{record.undcode,jdbcType=BIGINT},
			</if>
			<if test="record.transactiontype != null">
				transactionType = #{record.transactiontype,jdbcType=VARCHAR},
			</if>
			<if test="record.transactiondate != null">
				transactionDate = #{record.transactiondate,jdbcType=TIMESTAMP},
			</if>
			<if test="record.netvalue != null">
				netValue = #{record.netvalue,jdbcType=DOUBLE},
			</if>
			<if test="record.accumulatedNet != null">
				accumulated_Net = #{record.accumulatedNet,jdbcType=DOUBLE},
			</if>
			<if test="record.valuation != null">
				valuation = #{record.valuation,jdbcType=DOUBLE},
			</if>
			<if test="record.money != null">
				money = #{record.money,jdbcType=DOUBLE},
			</if>
			<if test="record.amountofmoney != null">
				amountOfMoney = #{record.amountofmoney,jdbcType=DOUBLE},
			</if>
			<if test="record.handlingfee != null">
				handlingFee = #{record.handlingfee,jdbcType=DOUBLE},
			</if>
			<if test="record.paytype != null">
				payType = #{record.paytype,jdbcType=VARCHAR},
			</if>
			<if test="record.bankcard != null">
				bankCard = #{record.bankcard,jdbcType=BIGINT},
			</if>
			<if test="record.banktype != null">
				bankType = #{record.banktype,jdbcType=VARCHAR},
			</if>
			<if test="record.dividendtype != null">
				dividendType = #{record.dividendtype,jdbcType=VARCHAR},
			</if>
			<if test="record.orderstatus != null">
				orderStatus = #{record.orderstatus,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update fund_order
		set fundorderId = #{record.fundorderid,jdbcType=BIGINT},
		fundID = #{record.fundid,jdbcType=BIGINT},
		userID = #{record.userid,jdbcType=BIGINT},
		fundName = #{record.fundname,jdbcType=VARCHAR},
		fundCompanyName = #{record.fundcompanyname,jdbcType=VARCHAR},
		undCode = #{record.undcode,jdbcType=BIGINT},
		transactionType = #{record.transactiontype,jdbcType=VARCHAR},
		transactionDate = #{record.transactiondate,jdbcType=TIMESTAMP},
		netValue = #{record.netvalue,jdbcType=DOUBLE},
		accumulated_Net = #{record.accumulatedNet,jdbcType=DOUBLE},
		valuation = #{record.valuation,jdbcType=DOUBLE},
		money = #{record.money,jdbcType=DOUBLE},
		amountOfMoney = #{record.amountofmoney,jdbcType=DOUBLE},
		handlingFee = #{record.handlingfee,jdbcType=DOUBLE},
		payType = #{record.paytype,jdbcType=VARCHAR},
		bankCard = #{record.bankcard,jdbcType=BIGINT},
		bankType = #{record.banktype,jdbcType=VARCHAR},
		dividendType = #{record.dividendtype,jdbcType=VARCHAR},
		orderStatus = #{record.orderstatus,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="cn.sz.gz.pojo.FundOrder">
		update fund_order
		<set>
			<if test="fundid != null">
				fundID = #{fundid,jdbcType=BIGINT},
			</if>
			<if test="userid != null">
				userID = #{userid,jdbcType=BIGINT},
			</if>
			<if test="fundname != null">
				fundName = #{fundname,jdbcType=VARCHAR},
			</if>
			<if test="fundcompanyname != null">
				fundCompanyName = #{fundcompanyname,jdbcType=VARCHAR},
			</if>
			<if test="undcode != null">
				undCode = #{undcode,jdbcType=BIGINT},
			</if>
			<if test="transactiontype != null">
				transactionType = #{transactiontype,jdbcType=VARCHAR},
			</if>
			<if test="transactiondate != null">
				transactionDate = #{transactiondate,jdbcType=TIMESTAMP},
			</if>
			<if test="netvalue != null">
				netValue = #{netvalue,jdbcType=DOUBLE},
			</if>
			<if test="accumulatedNet != null">
				accumulated_Net = #{accumulatedNet,jdbcType=DOUBLE},
			</if>
			<if test="valuation != null">
				valuation = #{valuation,jdbcType=DOUBLE},
			</if>
			<if test="money != null">
				money = #{money,jdbcType=DOUBLE},
			</if>
			<if test="amountofmoney != null">
				amountOfMoney = #{amountofmoney,jdbcType=DOUBLE},
			</if>
			<if test="handlingfee != null">
				handlingFee = #{handlingfee,jdbcType=DOUBLE},
			</if>
			<if test="paytype != null">
				payType = #{paytype,jdbcType=VARCHAR},
			</if>
			<if test="bankcard != null">
				bankCard = #{bankcard,jdbcType=BIGINT},
			</if>
			<if test="banktype != null">
				bankType = #{banktype,jdbcType=VARCHAR},
			</if>
			<if test="dividendtype != null">
				dividendType = #{dividendtype,jdbcType=VARCHAR},
			</if>
			<if test="orderstatus != null">
				orderStatus = #{orderstatus,jdbcType=VARCHAR},
			</if>
		</set>
		where fundorderId = #{fundorderid,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="cn.sz.gz.pojo.FundOrder">
		update fund_order
		set fundID = #{fundid,jdbcType=BIGINT},
		userID = #{userid,jdbcType=BIGINT},
		fundName = #{fundname,jdbcType=VARCHAR},
		fundCompanyName = #{fundcompanyname,jdbcType=VARCHAR},
		undCode = #{undcode,jdbcType=BIGINT},
		transactionType = #{transactiontype,jdbcType=VARCHAR},
		transactionDate = #{transactiondate,jdbcType=TIMESTAMP},
		netValue = #{netvalue,jdbcType=DOUBLE},
		accumulated_Net = #{accumulatedNet,jdbcType=DOUBLE},
		valuation = #{valuation,jdbcType=DOUBLE},
		money = #{money,jdbcType=DOUBLE},
		amountOfMoney = #{amountofmoney,jdbcType=DOUBLE},
		handlingFee = #{handlingfee,jdbcType=DOUBLE},
		payType = #{paytype,jdbcType=VARCHAR},
		bankCard = #{bankcard,jdbcType=BIGINT},
		bankType = #{banktype,jdbcType=VARCHAR},
		dividendType = #{dividendtype,jdbcType=VARCHAR},
		orderStatus = #{orderstatus,jdbcType=VARCHAR}
		where fundorderId = #{fundorderid,jdbcType=BIGINT}
	</update>
	<resultMap id="BaseResultMap" type="cn.sz.gz.pojo.FundOrder">
		<id column="fundorderId" jdbcType="BIGINT" property="fundorderid" />
		<result column="fundID" jdbcType="BIGINT" property="fundid" />
		<result column="userID" jdbcType="BIGINT" property="userid" />
		<result column="fundName" jdbcType="VARCHAR"
			property="fundname" />
		<result column="fundCompanyName" jdbcType="VARCHAR"
			property="fundcompanyname" />
		<result column="undCode" jdbcType="BIGINT" property="undcode" />
		<result column="transactionType" jdbcType="VARCHAR"
			property="transactiontype" />
		<result column="transactionDate" jdbcType="TIMESTAMP"
			property="transactiondate" />
		<result column="netValue" jdbcType="DOUBLE" property="netvalue" />
		<result column="accumulated_Net" jdbcType="DOUBLE"
			property="accumulatedNet" />
		<result column="valuation" jdbcType="DOUBLE"
			property="valuation" />
		<result column="money" jdbcType="DOUBLE" property="money" />
		<result column="amountOfMoney" jdbcType="DOUBLE"
			property="amountofmoney" />
		<result column="handlingFee" jdbcType="DOUBLE"
			property="handlingfee" />
		<result column="payType" jdbcType="VARCHAR" property="paytype" />
		<result column="bankCard" jdbcType="BIGINT" property="bankcard" />
		<result column="bankType" jdbcType="VARCHAR"
			property="banktype" />
		<result column="dividendType" jdbcType="VARCHAR"
			property="dividendtype" />
		<result column="orderStatus" jdbcType="VARCHAR"
			property="orderstatus" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		fundorderId, fundID, userID, fundName, fundCompanyName, undCode, transactionType,
		transactionDate, netValue, accumulated_Net, valuation, money,
		amountOfMoney, handlingFee,
		payType, bankCard, bankType, dividendType, orderStatus
	</sql>
	<select id="selectByExample"
		parameterType="cn.sz.gz.pojo.FundOrderExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from fund_order
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from fund_order
		where fundorderId = #{fundorderid,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from fund_order
		where fundorderId = #{fundorderid,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample"
		parameterType="cn.sz.gz.pojo.FundOrderExample">
		delete from fund_order
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="cn.sz.gz.pojo.FundOrder">
		insert into fund_order (fundorderId, fundID, userID,
		fundName, fundCompanyName, undCode,
		transactionType, transactionDate, netValue,
		accumulated_Net, valuation, money,
		amountOfMoney, handlingFee, payType,
		bankCard, bankType, dividendType,
		orderStatus)
		values (#{fundorderid,jdbcType=BIGINT}, #{fundid,jdbcType=BIGINT},
		#{userid,jdbcType=BIGINT},
		#{fundname,jdbcType=VARCHAR}, #{fundcompanyname,jdbcType=VARCHAR}, #{undcode,jdbcType=BIGINT},
		#{transactiontype,jdbcType=VARCHAR},
		#{transactiondate,jdbcType=TIMESTAMP}, #{netvalue,jdbcType=DOUBLE},
		#{accumulatedNet,jdbcType=DOUBLE}, #{valuation,jdbcType=DOUBLE},
		#{money,jdbcType=DOUBLE},
		#{amountofmoney,jdbcType=DOUBLE}, #{handlingfee,jdbcType=DOUBLE}, #{paytype,jdbcType=VARCHAR},
		#{bankcard,jdbcType=BIGINT}, #{banktype,jdbcType=VARCHAR},
		#{dividendtype,jdbcType=VARCHAR},
		#{orderstatus,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective"
		parameterType="cn.sz.gz.pojo.FundOrder">
		insert into fund_order
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="fundorderid != null">
				fundorderId,
			</if>
			<if test="fundid != null">
				fundID,
			</if>
			<if test="userid != null">
				userID,
			</if>
			<if test="fundname != null">
				fundName,
			</if>
			<if test="fundcompanyname != null">
				fundCompanyName,
			</if>
			<if test="undcode != null">
				undCode,
			</if>
			<if test="transactiontype != null">
				transactionType,
			</if>
			<if test="transactiondate != null">
				transactionDate,
			</if>
			<if test="netvalue != null">
				netValue,
			</if>
			<if test="accumulatedNet != null">
				accumulated_Net,
			</if>
			<if test="valuation != null">
				valuation,
			</if>
			<if test="money != null">
				money,
			</if>
			<if test="amountofmoney != null">
				amountOfMoney,
			</if>
			<if test="handlingfee != null">
				handlingFee,
			</if>
			<if test="paytype != null">
				payType,
			</if>
			<if test="bankcard != null">
				bankCard,
			</if>
			<if test="banktype != null">
				bankType,
			</if>
			<if test="dividendtype != null">
				dividendType,
			</if>
			<if test="orderstatus != null">
				orderStatus,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="fundorderid != null">
				#{fundorderid,jdbcType=BIGINT},
			</if>
			<if test="fundid != null">
				#{fundid,jdbcType=BIGINT},
			</if>
			<if test="userid != null">
				#{userid,jdbcType=BIGINT},
			</if>
			<if test="fundname != null">
				#{fundname,jdbcType=VARCHAR},
			</if>
			<if test="fundcompanyname != null">
				#{fundcompanyname,jdbcType=VARCHAR},
			</if>
			<if test="undcode != null">
				#{undcode,jdbcType=BIGINT},
			</if>
			<if test="transactiontype != null">
				#{transactiontype,jdbcType=VARCHAR},
			</if>
			<if test="transactiondate != null">
				#{transactiondate,jdbcType=TIMESTAMP},
			</if>
			<if test="netvalue != null">
				#{netvalue,jdbcType=DOUBLE},
			</if>
			<if test="accumulatedNet != null">
				#{accumulatedNet,jdbcType=DOUBLE},
			</if>
			<if test="valuation != null">
				#{valuation,jdbcType=DOUBLE},
			</if>
			<if test="money != null">
				#{money,jdbcType=DOUBLE},
			</if>
			<if test="amountofmoney != null">
				#{amountofmoney,jdbcType=DOUBLE},
			</if>
			<if test="handlingfee != null">
				#{handlingfee,jdbcType=DOUBLE},
			</if>
			<if test="paytype != null">
				#{paytype,jdbcType=VARCHAR},
			</if>
			<if test="bankcard != null">
				#{bankcard,jdbcType=BIGINT},
			</if>
			<if test="banktype != null">
				#{banktype,jdbcType=VARCHAR},
			</if>
			<if test="dividendtype != null">
				#{dividendtype,jdbcType=VARCHAR},
			</if>
			<if test="orderstatus != null">
				#{orderstatus,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="cn.sz.gz.pojo.FundOrderExample"
		resultType="java.lang.Integer">
		select count(*) from fund_order
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update fund_order
		<set>
			<if test="record.fundorderid != null">
				fundorderId = #{record.fundorderid,jdbcType=BIGINT},
			</if>
			<if test="record.fundid != null">
				fundID = #{record.fundid,jdbcType=BIGINT},
			</if>
			<if test="record.userid != null">
				userID = #{record.userid,jdbcType=BIGINT},
			</if>
			<if test="record.fundname != null">
				fundName = #{record.fundname,jdbcType=VARCHAR},
			</if>
			<if test="record.fundcompanyname != null">
				fundCompanyName = #{record.fundcompanyname,jdbcType=VARCHAR},
			</if>
			<if test="record.undcode != null">
				undCode = #{record.undcode,jdbcType=BIGINT},
			</if>
			<if test="record.transactiontype != null">
				transactionType = #{record.transactiontype,jdbcType=VARCHAR},
			</if>
			<if test="record.transactiondate != null">
				transactionDate = #{record.transactiondate,jdbcType=TIMESTAMP},
			</if>
			<if test="record.netvalue != null">
				netValue = #{record.netvalue,jdbcType=DOUBLE},
			</if>
			<if test="record.accumulatedNet != null">
				accumulated_Net = #{record.accumulatedNet,jdbcType=DOUBLE},
			</if>
			<if test="record.valuation != null">
				valuation = #{record.valuation,jdbcType=DOUBLE},
			</if>
			<if test="record.money != null">
				money = #{record.money,jdbcType=DOUBLE},
			</if>
			<if test="record.amountofmoney != null">
				amountOfMoney = #{record.amountofmoney,jdbcType=DOUBLE},
			</if>
			<if test="record.handlingfee != null">
				handlingFee = #{record.handlingfee,jdbcType=DOUBLE},
			</if>
			<if test="record.paytype != null">
				payType = #{record.paytype,jdbcType=VARCHAR},
			</if>
			<if test="record.bankcard != null">
				bankCard = #{record.bankcard,jdbcType=BIGINT},
			</if>
			<if test="record.banktype != null">
				bankType = #{record.banktype,jdbcType=VARCHAR},
			</if>
			<if test="record.dividendtype != null">
				dividendType = #{record.dividendtype,jdbcType=VARCHAR},
			</if>
			<if test="record.orderstatus != null">
				orderStatus = #{record.orderstatus,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update fund_order
		set fundorderId = #{record.fundorderid,jdbcType=BIGINT},
		fundID = #{record.fundid,jdbcType=BIGINT},
		userID = #{record.userid,jdbcType=BIGINT},
		fundName = #{record.fundname,jdbcType=VARCHAR},
		fundCompanyName = #{record.fundcompanyname,jdbcType=VARCHAR},
		undCode = #{record.undcode,jdbcType=BIGINT},
		transactionType = #{record.transactiontype,jdbcType=VARCHAR},
		transactionDate = #{record.transactiondate,jdbcType=TIMESTAMP},
		netValue = #{record.netvalue,jdbcType=DOUBLE},
		accumulated_Net = #{record.accumulatedNet,jdbcType=DOUBLE},
		valuation = #{record.valuation,jdbcType=DOUBLE},
		money = #{record.money,jdbcType=DOUBLE},
		amountOfMoney = #{record.amountofmoney,jdbcType=DOUBLE},
		handlingFee = #{record.handlingfee,jdbcType=DOUBLE},
		payType = #{record.paytype,jdbcType=VARCHAR},
		bankCard = #{record.bankcard,jdbcType=BIGINT},
		bankType = #{record.banktype,jdbcType=VARCHAR},
		dividendType = #{record.dividendtype,jdbcType=VARCHAR},
		orderStatus = #{record.orderstatus,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="cn.sz.gz.pojo.FundOrder">
		update fund_order
		<set>
			<if test="fundid != null">
				fundID = #{fundid,jdbcType=BIGINT},
			</if>
			<if test="userid != null">
				userID = #{userid,jdbcType=BIGINT},
			</if>
			<if test="fundname != null">
				fundName = #{fundname,jdbcType=VARCHAR},
			</if>
			<if test="fundcompanyname != null">
				fundCompanyName = #{fundcompanyname,jdbcType=VARCHAR},
			</if>
			<if test="undcode != null">
				undCode = #{undcode,jdbcType=BIGINT},
			</if>
			<if test="transactiontype != null">
				transactionType = #{transactiontype,jdbcType=VARCHAR},
			</if>
			<if test="transactiondate != null">
				transactionDate = #{transactiondate,jdbcType=TIMESTAMP},
			</if>
			<if test="netvalue != null">
				netValue = #{netvalue,jdbcType=DOUBLE},
			</if>
			<if test="accumulatedNet != null">
				accumulated_Net = #{accumulatedNet,jdbcType=DOUBLE},
			</if>
			<if test="valuation != null">
				valuation = #{valuation,jdbcType=DOUBLE},
			</if>
			<if test="money != null">
				money = #{money,jdbcType=DOUBLE},
			</if>
			<if test="amountofmoney != null">
				amountOfMoney = #{amountofmoney,jdbcType=DOUBLE},
			</if>
			<if test="handlingfee != null">
				handlingFee = #{handlingfee,jdbcType=DOUBLE},
			</if>
			<if test="paytype != null">
				payType = #{paytype,jdbcType=VARCHAR},
			</if>
			<if test="bankcard != null">
				bankCard = #{bankcard,jdbcType=BIGINT},
			</if>
			<if test="banktype != null">
				bankType = #{banktype,jdbcType=VARCHAR},
			</if>
			<if test="dividendtype != null">
				dividendType = #{dividendtype,jdbcType=VARCHAR},
			</if>
			<if test="orderstatus != null">
				orderStatus = #{orderstatus,jdbcType=VARCHAR},
			</if>
		</set>
		where fundorderId = #{fundorderid,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="cn.sz.gz.pojo.FundOrder">
		update fund_order
		set fundID = #{fundid,jdbcType=BIGINT},
		userID = #{userid,jdbcType=BIGINT},
		fundName = #{fundname,jdbcType=VARCHAR},
		fundCompanyName = #{fundcompanyname,jdbcType=VARCHAR},
		undCode = #{undcode,jdbcType=BIGINT},
		transactionType = #{transactiontype,jdbcType=VARCHAR},
		transactionDate = #{transactiondate,jdbcType=TIMESTAMP},
		netValue = #{netvalue,jdbcType=DOUBLE},
		accumulated_Net = #{accumulatedNet,jdbcType=DOUBLE},
		valuation = #{valuation,jdbcType=DOUBLE},
		money = #{money,jdbcType=DOUBLE},
		amountOfMoney = #{amountofmoney,jdbcType=DOUBLE},
		handlingFee = #{handlingfee,jdbcType=DOUBLE},
		payType = #{paytype,jdbcType=VARCHAR},
		bankCard = #{bankcard,jdbcType=BIGINT},
		bankType = #{banktype,jdbcType=VARCHAR},
		dividendType = #{dividendtype,jdbcType=VARCHAR},
		orderStatus = #{orderstatus,jdbcType=VARCHAR}
		where fundorderId = #{fundorderid,jdbcType=BIGINT}
	</update>
	<resultMap id="BaseResultMap" type="cn.sz.gz.pojo.FundOrder">
		<id column="fundorderId" jdbcType="BIGINT" property="fundorderid" />
		<result column="fundID" jdbcType="BIGINT" property="fundid" />
		<result column="userID" jdbcType="BIGINT" property="userid" />
		<result column="fundName" jdbcType="VARCHAR"
			property="fundname" />
		<result column="fundCompanyName" jdbcType="VARCHAR"
			property="fundcompanyname" />
		<result column="undCode" jdbcType="BIGINT" property="undcode" />
		<result column="transactionType" jdbcType="VARCHAR"
			property="transactiontype" />
		<result column="transactionDate" jdbcType="TIMESTAMP"
			property="transactiondate" />
		<result column="netValue" jdbcType="DOUBLE" property="netvalue" />
		<result column="accumulated_Net" jdbcType="DOUBLE"
			property="accumulatedNet" />
		<result column="valuation" jdbcType="DOUBLE"
			property="valuation" />
		<result column="money" jdbcType="DOUBLE" property="money" />
		<result column="amountOfMoney" jdbcType="DOUBLE"
			property="amountofmoney" />
		<result column="handlingFee" jdbcType="DOUBLE"
			property="handlingfee" />
		<result column="payType" jdbcType="VARCHAR" property="paytype" />
		<result column="bankCard" jdbcType="BIGINT" property="bankcard" />
		<result column="bankType" jdbcType="VARCHAR"
			property="banktype" />
		<result column="dividendType" jdbcType="VARCHAR"
			property="dividendtype" />
		<result column="orderStatus" jdbcType="VARCHAR"
			property="orderstatus" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		fundorderId, fundID, userID, fundName, fundCompanyName, undCode, transactionType,
		transactionDate, netValue, accumulated_Net, valuation, money,
		amountOfMoney, handlingFee,
		payType, bankCard, bankType, dividendType, orderStatus
	</sql>
	<select id="selectByExample"
		parameterType="cn.sz.gz.pojo.FundOrderExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from fund_order
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from fund_order
		where fundorderId = #{fundorderid,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from fund_order
		where fundorderId = #{fundorderid,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample"
		parameterType="cn.sz.gz.pojo.FundOrderExample">
		delete from fund_order
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="cn.sz.gz.pojo.FundOrder">
		insert into fund_order (fundorderId, fundID, userID,
		fundName, fundCompanyName, undCode,
		transactionType, transactionDate, netValue,
		accumulated_Net, valuation, money,
		amountOfMoney, handlingFee, payType,
		bankCard, bankType, dividendType,
		orderStatus)
		values (#{fundorderid,jdbcType=BIGINT}, #{fundid,jdbcType=BIGINT},
		#{userid,jdbcType=BIGINT},
		#{fundname,jdbcType=VARCHAR}, #{fundcompanyname,jdbcType=VARCHAR}, #{undcode,jdbcType=BIGINT},
		#{transactiontype,jdbcType=VARCHAR},
		#{transactiondate,jdbcType=TIMESTAMP}, #{netvalue,jdbcType=DOUBLE},
		#{accumulatedNet,jdbcType=DOUBLE}, #{valuation,jdbcType=DOUBLE},
		#{money,jdbcType=DOUBLE},
		#{amountofmoney,jdbcType=DOUBLE}, #{handlingfee,jdbcType=DOUBLE}, #{paytype,jdbcType=VARCHAR},
		#{bankcard,jdbcType=BIGINT}, #{banktype,jdbcType=VARCHAR},
		#{dividendtype,jdbcType=VARCHAR},
		#{orderstatus,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective"
		parameterType="cn.sz.gz.pojo.FundOrder">
		insert into fund_order
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="fundorderid != null">
				fundorderId,
			</if>
			<if test="fundid != null">
				fundID,
			</if>
			<if test="userid != null">
				userID,
			</if>
			<if test="fundname != null">
				fundName,
			</if>
			<if test="fundcompanyname != null">
				fundCompanyName,
			</if>
			<if test="undcode != null">
				undCode,
			</if>
			<if test="transactiontype != null">
				transactionType,
			</if>
			<if test="transactiondate != null">
				transactionDate,
			</if>
			<if test="netvalue != null">
				netValue,
			</if>
			<if test="accumulatedNet != null">
				accumulated_Net,
			</if>
			<if test="valuation != null">
				valuation,
			</if>
			<if test="money != null">
				money,
			</if>
			<if test="amountofmoney != null">
				amountOfMoney,
			</if>
			<if test="handlingfee != null">
				handlingFee,
			</if>
			<if test="paytype != null">
				payType,
			</if>
			<if test="bankcard != null">
				bankCard,
			</if>
			<if test="banktype != null">
				bankType,
			</if>
			<if test="dividendtype != null">
				dividendType,
			</if>
			<if test="orderstatus != null">
				orderStatus,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="fundorderid != null">
				#{fundorderid,jdbcType=BIGINT},
			</if>
			<if test="fundid != null">
				#{fundid,jdbcType=BIGINT},
			</if>
			<if test="userid != null">
				#{userid,jdbcType=BIGINT},
			</if>
			<if test="fundname != null">
				#{fundname,jdbcType=VARCHAR},
			</if>
			<if test="fundcompanyname != null">
				#{fundcompanyname,jdbcType=VARCHAR},
			</if>
			<if test="undcode != null">
				#{undcode,jdbcType=BIGINT},
			</if>
			<if test="transactiontype != null">
				#{transactiontype,jdbcType=VARCHAR},
			</if>
			<if test="transactiondate != null">
				#{transactiondate,jdbcType=TIMESTAMP},
			</if>
			<if test="netvalue != null">
				#{netvalue,jdbcType=DOUBLE},
			</if>
			<if test="accumulatedNet != null">
				#{accumulatedNet,jdbcType=DOUBLE},
			</if>
			<if test="valuation != null">
				#{valuation,jdbcType=DOUBLE},
			</if>
			<if test="money != null">
				#{money,jdbcType=DOUBLE},
			</if>
			<if test="amountofmoney != null">
				#{amountofmoney,jdbcType=DOUBLE},
			</if>
			<if test="handlingfee != null">
				#{handlingfee,jdbcType=DOUBLE},
			</if>
			<if test="paytype != null">
				#{paytype,jdbcType=VARCHAR},
			</if>
			<if test="bankcard != null">
				#{bankcard,jdbcType=BIGINT},
			</if>
			<if test="banktype != null">
				#{banktype,jdbcType=VARCHAR},
			</if>
			<if test="dividendtype != null">
				#{dividendtype,jdbcType=VARCHAR},
			</if>
			<if test="orderstatus != null">
				#{orderstatus,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="cn.sz.gz.pojo.FundOrderExample"
		resultType="java.lang.Integer">
		select count(*) from fund_order
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update fund_order
		<set>
			<if test="record.fundorderid != null">
				fundorderId = #{record.fundorderid,jdbcType=BIGINT},
			</if>
			<if test="record.fundid != null">
				fundID = #{record.fundid,jdbcType=BIGINT},
			</if>
			<if test="record.userid != null">
				userID = #{record.userid,jdbcType=BIGINT},
			</if>
			<if test="record.fundname != null">
				fundName = #{record.fundname,jdbcType=VARCHAR},
			</if>
			<if test="record.fundcompanyname != null">
				fundCompanyName = #{record.fundcompanyname,jdbcType=VARCHAR},
			</if>
			<if test="record.undcode != null">
				undCode = #{record.undcode,jdbcType=BIGINT},
			</if>
			<if test="record.transactiontype != null">
				transactionType = #{record.transactiontype,jdbcType=VARCHAR},
			</if>
			<if test="record.transactiondate != null">
				transactionDate = #{record.transactiondate,jdbcType=TIMESTAMP},
			</if>
			<if test="record.netvalue != null">
				netValue = #{record.netvalue,jdbcType=DOUBLE},
			</if>
			<if test="record.accumulatedNet != null">
				accumulated_Net = #{record.accumulatedNet,jdbcType=DOUBLE},
			</if>
			<if test="record.valuation != null">
				valuation = #{record.valuation,jdbcType=DOUBLE},
			</if>
			<if test="record.money != null">
				money = #{record.money,jdbcType=DOUBLE},
			</if>
			<if test="record.amountofmoney != null">
				amountOfMoney = #{record.amountofmoney,jdbcType=DOUBLE},
			</if>
			<if test="record.handlingfee != null">
				handlingFee = #{record.handlingfee,jdbcType=DOUBLE},
			</if>
			<if test="record.paytype != null">
				payType = #{record.paytype,jdbcType=VARCHAR},
			</if>
			<if test="record.bankcard != null">
				bankCard = #{record.bankcard,jdbcType=BIGINT},
			</if>
			<if test="record.banktype != null">
				bankType = #{record.banktype,jdbcType=VARCHAR},
			</if>
			<if test="record.dividendtype != null">
				dividendType = #{record.dividendtype,jdbcType=VARCHAR},
			</if>
			<if test="record.orderstatus != null">
				orderStatus = #{record.orderstatus,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update fund_order
		set fundorderId = #{record.fundorderid,jdbcType=BIGINT},
		fundID = #{record.fundid,jdbcType=BIGINT},
		userID = #{record.userid,jdbcType=BIGINT},
		fundName = #{record.fundname,jdbcType=VARCHAR},
		fundCompanyName = #{record.fundcompanyname,jdbcType=VARCHAR},
		undCode = #{record.undcode,jdbcType=BIGINT},
		transactionType = #{record.transactiontype,jdbcType=VARCHAR},
		transactionDate = #{record.transactiondate,jdbcType=TIMESTAMP},
		netValue = #{record.netvalue,jdbcType=DOUBLE},
		accumulated_Net = #{record.accumulatedNet,jdbcType=DOUBLE},
		valuation = #{record.valuation,jdbcType=DOUBLE},
		money = #{record.money,jdbcType=DOUBLE},
		amountOfMoney = #{record.amountofmoney,jdbcType=DOUBLE},
		handlingFee = #{record.handlingfee,jdbcType=DOUBLE},
		payType = #{record.paytype,jdbcType=VARCHAR},
		bankCard = #{record.bankcard,jdbcType=BIGINT},
		bankType = #{record.banktype,jdbcType=VARCHAR},
		dividendType = #{record.dividendtype,jdbcType=VARCHAR},
		orderStatus = #{record.orderstatus,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="cn.sz.gz.pojo.FundOrder">
		update fund_order
		<set>
			<if test="fundid != null">
				fundID = #{fundid,jdbcType=BIGINT},
			</if>
			<if test="userid != null">
				userID = #{userid,jdbcType=BIGINT},
			</if>
			<if test="fundname != null">
				fundName = #{fundname,jdbcType=VARCHAR},
			</if>
			<if test="fundcompanyname != null">
				fundCompanyName = #{fundcompanyname,jdbcType=VARCHAR},
			</if>
			<if test="undcode != null">
				undCode = #{undcode,jdbcType=BIGINT},
			</if>
			<if test="transactiontype != null">
				transactionType = #{transactiontype,jdbcType=VARCHAR},
			</if>
			<if test="transactiondate != null">
				transactionDate = #{transactiondate,jdbcType=TIMESTAMP},
			</if>
			<if test="netvalue != null">
				netValue = #{netvalue,jdbcType=DOUBLE},
			</if>
			<if test="accumulatedNet != null">
				accumulated_Net = #{accumulatedNet,jdbcType=DOUBLE},
			</if>
			<if test="valuation != null">
				valuation = #{valuation,jdbcType=DOUBLE},
			</if>
			<if test="money != null">
				money = #{money,jdbcType=DOUBLE},
			</if>
			<if test="amountofmoney != null">
				amountOfMoney = #{amountofmoney,jdbcType=DOUBLE},
			</if>
			<if test="handlingfee != null">
				handlingFee = #{handlingfee,jdbcType=DOUBLE},
			</if>
			<if test="paytype != null">
				payType = #{paytype,jdbcType=VARCHAR},
			</if>
			<if test="bankcard != null">
				bankCard = #{bankcard,jdbcType=BIGINT},
			</if>
			<if test="banktype != null">
				bankType = #{banktype,jdbcType=VARCHAR},
			</if>
			<if test="dividendtype != null">
				dividendType = #{dividendtype,jdbcType=VARCHAR},
			</if>
			<if test="orderstatus != null">
				orderStatus = #{orderstatus,jdbcType=VARCHAR},
			</if>
		</set>
		where fundorderId = #{fundorderid,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="cn.sz.gz.pojo.FundOrder">
		update fund_order
		set fundID = #{fundid,jdbcType=BIGINT},
		userID = #{userid,jdbcType=BIGINT},
		fundName = #{fundname,jdbcType=VARCHAR},
		fundCompanyName = #{fundcompanyname,jdbcType=VARCHAR},
		undCode = #{undcode,jdbcType=BIGINT},
		transactionType = #{transactiontype,jdbcType=VARCHAR},
		transactionDate = #{transactiondate,jdbcType=TIMESTAMP},
		netValue = #{netvalue,jdbcType=DOUBLE},
		accumulated_Net = #{accumulatedNet,jdbcType=DOUBLE},
		valuation = #{valuation,jdbcType=DOUBLE},
		money = #{money,jdbcType=DOUBLE},
		amountOfMoney = #{amountofmoney,jdbcType=DOUBLE},
		handlingFee = #{handlingfee,jdbcType=DOUBLE},
		payType = #{paytype,jdbcType=VARCHAR},
		bankCard = #{bankcard,jdbcType=BIGINT},
		bankType = #{banktype,jdbcType=VARCHAR},
		dividendType = #{dividendtype,jdbcType=VARCHAR},
		orderStatus = #{orderstatus,jdbcType=VARCHAR}
		where fundorderId = #{fundorderid,jdbcType=BIGINT}
	</update>
	<resultMap id="BaseResultMap" type="cn.sz.gz.pojo.FundOrder">
		<id column="fundorderId" jdbcType="BIGINT" property="fundorderid" />
		<result column="fundID" jdbcType="BIGINT" property="fundid" />
		<result column="userID" jdbcType="BIGINT" property="userid" />
		<result column="fundName" jdbcType="VARCHAR"
			property="fundname" />
		<result column="fundCompanyName" jdbcType="VARCHAR"
			property="fundcompanyname" />
		<result column="undCode" jdbcType="BIGINT" property="undcode" />
		<result column="transactionType" jdbcType="VARCHAR"
			property="transactiontype" />
		<result column="transactionDate" jdbcType="TIMESTAMP"
			property="transactiondate" />
		<result column="netValue" jdbcType="DOUBLE" property="netvalue" />
		<result column="accumulated_Net" jdbcType="DOUBLE"
			property="accumulatedNet" />
		<result column="valuation" jdbcType="DOUBLE"
			property="valuation" />
		<result column="money" jdbcType="DOUBLE" property="money" />
		<result column="amountOfMoney" jdbcType="DOUBLE"
			property="amountofmoney" />
		<result column="handlingFee" jdbcType="DOUBLE"
			property="handlingfee" />
		<result column="payType" jdbcType="VARCHAR" property="paytype" />
		<result column="bankCard" jdbcType="BIGINT" property="bankcard" />
		<result column="bankType" jdbcType="VARCHAR"
			property="banktype" />
		<result column="dividendType" jdbcType="VARCHAR"
			property="dividendtype" />
		<result column="orderStatus" jdbcType="VARCHAR"
			property="orderstatus" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		fundorderId, fundID, userID, fundName, fundCompanyName, undCode, transactionType,
		transactionDate, netValue, accumulated_Net, valuation, money,
		amountOfMoney, handlingFee,
		payType, bankCard, bankType, dividendType, orderStatus
	</sql>
	<select id="selectByExample"
		parameterType="cn.sz.gz.pojo.FundOrderExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from fund_order
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from fund_order
		where fundorderId = #{fundorderid,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from fund_order
		where fundorderId = #{fundorderid,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample"
		parameterType="cn.sz.gz.pojo.FundOrderExample">
		delete from fund_order
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="cn.sz.gz.pojo.FundOrder">
		insert into fund_order (fundorderId, fundID, userID,
		fundName, fundCompanyName, undCode,
		transactionType, transactionDate, netValue,
		accumulated_Net, valuation, money,
		amountOfMoney, handlingFee, payType,
		bankCard, bankType, dividendType,
		orderStatus)
		values (#{fundorderid,jdbcType=BIGINT}, #{fundid,jdbcType=BIGINT},
		#{userid,jdbcType=BIGINT},
		#{fundname,jdbcType=VARCHAR}, #{fundcompanyname,jdbcType=VARCHAR}, #{undcode,jdbcType=BIGINT},
		#{transactiontype,jdbcType=VARCHAR},
		#{transactiondate,jdbcType=TIMESTAMP}, #{netvalue,jdbcType=DOUBLE},
		#{accumulatedNet,jdbcType=DOUBLE}, #{valuation,jdbcType=DOUBLE},
		#{money,jdbcType=DOUBLE},
		#{amountofmoney,jdbcType=DOUBLE}, #{handlingfee,jdbcType=DOUBLE}, #{paytype,jdbcType=VARCHAR},
		#{bankcard,jdbcType=BIGINT}, #{banktype,jdbcType=VARCHAR},
		#{dividendtype,jdbcType=VARCHAR},
		#{orderstatus,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective"
		parameterType="cn.sz.gz.pojo.FundOrder">
		insert into fund_order
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="fundorderid != null">
				fundorderId,
			</if>
			<if test="fundid != null">
				fundID,
			</if>
			<if test="userid != null">
				userID,
			</if>
			<if test="fundname != null">
				fundName,
			</if>
			<if test="fundcompanyname != null">
				fundCompanyName,
			</if>
			<if test="undcode != null">
				undCode,
			</if>
			<if test="transactiontype != null">
				transactionType,
			</if>
			<if test="transactiondate != null">
				transactionDate,
			</if>
			<if test="netvalue != null">
				netValue,
			</if>
			<if test="accumulatedNet != null">
				accumulated_Net,
			</if>
			<if test="valuation != null">
				valuation,
			</if>
			<if test="money != null">
				money,
			</if>
			<if test="amountofmoney != null">
				amountOfMoney,
			</if>
			<if test="handlingfee != null">
				handlingFee,
			</if>
			<if test="paytype != null">
				payType,
			</if>
			<if test="bankcard != null">
				bankCard,
			</if>
			<if test="banktype != null">
				bankType,
			</if>
			<if test="dividendtype != null">
				dividendType,
			</if>
			<if test="orderstatus != null">
				orderStatus,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="fundorderid != null">
				#{fundorderid,jdbcType=BIGINT},
			</if>
			<if test="fundid != null">
				#{fundid,jdbcType=BIGINT},
			</if>
			<if test="userid != null">
				#{userid,jdbcType=BIGINT},
			</if>
			<if test="fundname != null">
				#{fundname,jdbcType=VARCHAR},
			</if>
			<if test="fundcompanyname != null">
				#{fundcompanyname,jdbcType=VARCHAR},
			</if>
			<if test="undcode != null">
				#{undcode,jdbcType=BIGINT},
			</if>
			<if test="transactiontype != null">
				#{transactiontype,jdbcType=VARCHAR},
			</if>
			<if test="transactiondate != null">
				#{transactiondate,jdbcType=TIMESTAMP},
			</if>
			<if test="netvalue != null">
				#{netvalue,jdbcType=DOUBLE},
			</if>
			<if test="accumulatedNet != null">
				#{accumulatedNet,jdbcType=DOUBLE},
			</if>
			<if test="valuation != null">
				#{valuation,jdbcType=DOUBLE},
			</if>
			<if test="money != null">
				#{money,jdbcType=DOUBLE},
			</if>
			<if test="amountofmoney != null">
				#{amountofmoney,jdbcType=DOUBLE},
			</if>
			<if test="handlingfee != null">
				#{handlingfee,jdbcType=DOUBLE},
			</if>
			<if test="paytype != null">
				#{paytype,jdbcType=VARCHAR},
			</if>
			<if test="bankcard != null">
				#{bankcard,jdbcType=BIGINT},
			</if>
			<if test="banktype != null">
				#{banktype,jdbcType=VARCHAR},
			</if>
			<if test="dividendtype != null">
				#{dividendtype,jdbcType=VARCHAR},
			</if>
			<if test="orderstatus != null">
				#{orderstatus,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="cn.sz.gz.pojo.FundOrderExample"
		resultType="java.lang.Integer">
		select count(*) from fund_order
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update fund_order
		<set>
			<if test="record.fundorderid != null">
				fundorderId = #{record.fundorderid,jdbcType=BIGINT},
			</if>
			<if test="record.fundid != null">
				fundID = #{record.fundid,jdbcType=BIGINT},
			</if>
			<if test="record.userid != null">
				userID = #{record.userid,jdbcType=BIGINT},
			</if>
			<if test="record.fundname != null">
				fundName = #{record.fundname,jdbcType=VARCHAR},
			</if>
			<if test="record.fundcompanyname != null">
				fundCompanyName = #{record.fundcompanyname,jdbcType=VARCHAR},
			</if>
			<if test="record.undcode != null">
				undCode = #{record.undcode,jdbcType=BIGINT},
			</if>
			<if test="record.transactiontype != null">
				transactionType = #{record.transactiontype,jdbcType=VARCHAR},
			</if>
			<if test="record.transactiondate != null">
				transactionDate = #{record.transactiondate,jdbcType=TIMESTAMP},
			</if>
			<if test="record.netvalue != null">
				netValue = #{record.netvalue,jdbcType=DOUBLE},
			</if>
			<if test="record.accumulatedNet != null">
				accumulated_Net = #{record.accumulatedNet,jdbcType=DOUBLE},
			</if>
			<if test="record.valuation != null">
				valuation = #{record.valuation,jdbcType=DOUBLE},
			</if>
			<if test="record.money != null">
				money = #{record.money,jdbcType=DOUBLE},
			</if>
			<if test="record.amountofmoney != null">
				amountOfMoney = #{record.amountofmoney,jdbcType=DOUBLE},
			</if>
			<if test="record.handlingfee != null">
				handlingFee = #{record.handlingfee,jdbcType=DOUBLE},
			</if>
			<if test="record.paytype != null">
				payType = #{record.paytype,jdbcType=VARCHAR},
			</if>
			<if test="record.bankcard != null">
				bankCard = #{record.bankcard,jdbcType=BIGINT},
			</if>
			<if test="record.banktype != null">
				bankType = #{record.banktype,jdbcType=VARCHAR},
			</if>
			<if test="record.dividendtype != null">
				dividendType = #{record.dividendtype,jdbcType=VARCHAR},
			</if>
			<if test="record.orderstatus != null">
				orderStatus = #{record.orderstatus,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update fund_order
		set fundorderId = #{record.fundorderid,jdbcType=BIGINT},
		fundID = #{record.fundid,jdbcType=BIGINT},
		userID = #{record.userid,jdbcType=BIGINT},
		fundName = #{record.fundname,jdbcType=VARCHAR},
		fundCompanyName = #{record.fundcompanyname,jdbcType=VARCHAR},
		undCode = #{record.undcode,jdbcType=BIGINT},
		transactionType = #{record.transactiontype,jdbcType=VARCHAR},
		transactionDate = #{record.transactiondate,jdbcType=TIMESTAMP},
		netValue = #{record.netvalue,jdbcType=DOUBLE},
		accumulated_Net = #{record.accumulatedNet,jdbcType=DOUBLE},
		valuation = #{record.valuation,jdbcType=DOUBLE},
		money = #{record.money,jdbcType=DOUBLE},
		amountOfMoney = #{record.amountofmoney,jdbcType=DOUBLE},
		handlingFee = #{record.handlingfee,jdbcType=DOUBLE},
		payType = #{record.paytype,jdbcType=VARCHAR},
		bankCard = #{record.bankcard,jdbcType=BIGINT},
		bankType = #{record.banktype,jdbcType=VARCHAR},
		dividendType = #{record.dividendtype,jdbcType=VARCHAR},
		orderStatus = #{record.orderstatus,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="cn.sz.gz.pojo.FundOrder">
		update fund_order
		<set>
			<if test="fundid != null">
				fundID = #{fundid,jdbcType=BIGINT},
			</if>
			<if test="userid != null">
				userID = #{userid,jdbcType=BIGINT},
			</if>
			<if test="fundname != null">
				fundName = #{fundname,jdbcType=VARCHAR},
			</if>
			<if test="fundcompanyname != null">
				fundCompanyName = #{fundcompanyname,jdbcType=VARCHAR},
			</if>
			<if test="undcode != null">
				undCode = #{undcode,jdbcType=BIGINT},
			</if>
			<if test="transactiontype != null">
				transactionType = #{transactiontype,jdbcType=VARCHAR},
			</if>
			<if test="transactiondate != null">
				transactionDate = #{transactiondate,jdbcType=TIMESTAMP},
			</if>
			<if test="netvalue != null">
				netValue = #{netvalue,jdbcType=DOUBLE},
			</if>
			<if test="accumulatedNet != null">
				accumulated_Net = #{accumulatedNet,jdbcType=DOUBLE},
			</if>
			<if test="valuation != null">
				valuation = #{valuation,jdbcType=DOUBLE},
			</if>
			<if test="money != null">
				money = #{money,jdbcType=DOUBLE},
			</if>
			<if test="amountofmoney != null">
				amountOfMoney = #{amountofmoney,jdbcType=DOUBLE},
			</if>
			<if test="handlingfee != null">
				handlingFee = #{handlingfee,jdbcType=DOUBLE},
			</if>
			<if test="paytype != null">
				payType = #{paytype,jdbcType=VARCHAR},
			</if>
			<if test="bankcard != null">
				bankCard = #{bankcard,jdbcType=BIGINT},
			</if>
			<if test="banktype != null">
				bankType = #{banktype,jdbcType=VARCHAR},
			</if>
			<if test="dividendtype != null">
				dividendType = #{dividendtype,jdbcType=VARCHAR},
			</if>
			<if test="orderstatus != null">
				orderStatus = #{orderstatus,jdbcType=VARCHAR},
			</if>
		</set>
		where fundorderId = #{fundorderid,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="cn.sz.gz.pojo.FundOrder">
		update fund_order
		set fundID = #{fundid,jdbcType=BIGINT},
		userID = #{userid,jdbcType=BIGINT},
		fundName = #{fundname,jdbcType=VARCHAR},
		fundCompanyName = #{fundcompanyname,jdbcType=VARCHAR},
		undCode = #{undcode,jdbcType=BIGINT},
		transactionType = #{transactiontype,jdbcType=VARCHAR},
		transactionDate = #{transactiondate,jdbcType=TIMESTAMP},
		netValue = #{netvalue,jdbcType=DOUBLE},
		accumulated_Net = #{accumulatedNet,jdbcType=DOUBLE},
		valuation = #{valuation,jdbcType=DOUBLE},
		money = #{money,jdbcType=DOUBLE},
		amountOfMoney = #{amountofmoney,jdbcType=DOUBLE},
		handlingFee = #{handlingfee,jdbcType=DOUBLE},
		payType = #{paytype,jdbcType=VARCHAR},
		bankCard = #{bankcard,jdbcType=BIGINT},
		bankType = #{banktype,jdbcType=VARCHAR},
		dividendType = #{dividendtype,jdbcType=VARCHAR},
		orderStatus = #{orderstatus,jdbcType=VARCHAR}
		where fundorderId = #{fundorderid,jdbcType=BIGINT}
	</update>
	<resultMap id="BaseResultMap" type="cn.sz.gz.pojo.FundOrder">
		<id column="fundorderId" jdbcType="BIGINT" property="fundorderid" />
		<result column="fundID" jdbcType="BIGINT" property="fundid" />
		<result column="userID" jdbcType="BIGINT" property="userid" />
		<result column="fundName" jdbcType="VARCHAR"
			property="fundname" />
		<result column="fundCompanyName" jdbcType="VARCHAR"
			property="fundcompanyname" />
		<result column="undCode" jdbcType="BIGINT" property="undcode" />
		<result column="transactionType" jdbcType="VARCHAR"
			property="transactiontype" />
		<result column="transactionDate" jdbcType="TIMESTAMP"
			property="transactiondate" />
		<result column="netValue" jdbcType="DOUBLE" property="netvalue" />
		<result column="accumulated_Net" jdbcType="DOUBLE"
			property="accumulatedNet" />
		<result column="valuation" jdbcType="DOUBLE"
			property="valuation" />
		<result column="money" jdbcType="DOUBLE" property="money" />
		<result column="amountOfMoney" jdbcType="DOUBLE"
			property="amountofmoney" />
		<result column="handlingFee" jdbcType="DOUBLE"
			property="handlingfee" />
		<result column="payType" jdbcType="VARCHAR" property="paytype" />
		<result column="bankCard" jdbcType="BIGINT" property="bankcard" />
		<result column="bankType" jdbcType="VARCHAR"
			property="banktype" />
		<result column="dividendType" jdbcType="VARCHAR"
			property="dividendtype" />
		<result column="orderStatus" jdbcType="VARCHAR"
			property="orderstatus" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		fundorderId, fundID, userID, fundName, fundCompanyName, undCode, transactionType,
		transactionDate, netValue, accumulated_Net, valuation, money,
		amountOfMoney, handlingFee,
		payType, bankCard, bankType, dividendType, orderStatus
	</sql>
	<select id="selectByExample"
		parameterType="cn.sz.gz.pojo.FundOrderExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from fund_order
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from fund_order
		where fundorderId = #{fundorderid,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from fund_order
		where fundorderId = #{fundorderid,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample"
		parameterType="cn.sz.gz.pojo.FundOrderExample">
		delete from fund_order
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="cn.sz.gz.pojo.FundOrder">
		insert into fund_order (fundorderId, fundID, userID,
		fundName, fundCompanyName, undCode,
		transactionType, transactionDate, netValue,
		accumulated_Net, valuation, money,
		amountOfMoney, handlingFee, payType,
		bankCard, bankType, dividendType,
		orderStatus)
		values (#{fundorderid,jdbcType=BIGINT}, #{fundid,jdbcType=BIGINT},
		#{userid,jdbcType=BIGINT},
		#{fundname,jdbcType=VARCHAR}, #{fundcompanyname,jdbcType=VARCHAR}, #{undcode,jdbcType=BIGINT},
		#{transactiontype,jdbcType=VARCHAR},
		#{transactiondate,jdbcType=TIMESTAMP}, #{netvalue,jdbcType=DOUBLE},
		#{accumulatedNet,jdbcType=DOUBLE}, #{valuation,jdbcType=DOUBLE},
		#{money,jdbcType=DOUBLE},
		#{amountofmoney,jdbcType=DOUBLE}, #{handlingfee,jdbcType=DOUBLE}, #{paytype,jdbcType=VARCHAR},
		#{bankcard,jdbcType=BIGINT}, #{banktype,jdbcType=VARCHAR},
		#{dividendtype,jdbcType=VARCHAR},
		#{orderstatus,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective"
		parameterType="cn.sz.gz.pojo.FundOrder">
		insert into fund_order
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="fundorderid != null">
				fundorderId,
			</if>
			<if test="fundid != null">
				fundID,
			</if>
			<if test="userid != null">
				userID,
			</if>
			<if test="fundname != null">
				fundName,
			</if>
			<if test="fundcompanyname != null">
				fundCompanyName,
			</if>
			<if test="undcode != null">
				undCode,
			</if>
			<if test="transactiontype != null">
				transactionType,
			</if>
			<if test="transactiondate != null">
				transactionDate,
			</if>
			<if test="netvalue != null">
				netValue,
			</if>
			<if test="accumulatedNet != null">
				accumulated_Net,
			</if>
			<if test="valuation != null">
				valuation,
			</if>
			<if test="money != null">
				money,
			</if>
			<if test="amountofmoney != null">
				amountOfMoney,
			</if>
			<if test="handlingfee != null">
				handlingFee,
			</if>
			<if test="paytype != null">
				payType,
			</if>
			<if test="bankcard != null">
				bankCard,
			</if>
			<if test="banktype != null">
				bankType,
			</if>
			<if test="dividendtype != null">
				dividendType,
			</if>
			<if test="orderstatus != null">
				orderStatus,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="fundorderid != null">
				#{fundorderid,jdbcType=BIGINT},
			</if>
			<if test="fundid != null">
				#{fundid,jdbcType=BIGINT},
			</if>
			<if test="userid != null">
				#{userid,jdbcType=BIGINT},
			</if>
			<if test="fundname != null">
				#{fundname,jdbcType=VARCHAR},
			</if>
			<if test="fundcompanyname != null">
				#{fundcompanyname,jdbcType=VARCHAR},
			</if>
			<if test="undcode != null">
				#{undcode,jdbcType=BIGINT},
			</if>
			<if test="transactiontype != null">
				#{transactiontype,jdbcType=VARCHAR},
			</if>
			<if test="transactiondate != null">
				#{transactiondate,jdbcType=TIMESTAMP},
			</if>
			<if test="netvalue != null">
				#{netvalue,jdbcType=DOUBLE},
			</if>
			<if test="accumulatedNet != null">
				#{accumulatedNet,jdbcType=DOUBLE},
			</if>
			<if test="valuation != null">
				#{valuation,jdbcType=DOUBLE},
			</if>
			<if test="money != null">
				#{money,jdbcType=DOUBLE},
			</if>
			<if test="amountofmoney != null">
				#{amountofmoney,jdbcType=DOUBLE},
			</if>
			<if test="handlingfee != null">
				#{handlingfee,jdbcType=DOUBLE},
			</if>
			<if test="paytype != null">
				#{paytype,jdbcType=VARCHAR},
			</if>
			<if test="bankcard != null">
				#{bankcard,jdbcType=BIGINT},
			</if>
			<if test="banktype != null">
				#{banktype,jdbcType=VARCHAR},
			</if>
			<if test="dividendtype != null">
				#{dividendtype,jdbcType=VARCHAR},
			</if>
			<if test="orderstatus != null">
				#{orderstatus,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="cn.sz.gz.pojo.FundOrderExample"
		resultType="java.lang.Integer">
		select count(*) from fund_order
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update fund_order
		<set>
			<if test="record.fundorderid != null">
				fundorderId = #{record.fundorderid,jdbcType=BIGINT},
			</if>
			<if test="record.fundid != null">
				fundID = #{record.fundid,jdbcType=BIGINT},
			</if>
			<if test="record.userid != null">
				userID = #{record.userid,jdbcType=BIGINT},
			</if>
			<if test="record.fundname != null">
				fundName = #{record.fundname,jdbcType=VARCHAR},
			</if>
			<if test="record.fundcompanyname != null">
				fundCompanyName = #{record.fundcompanyname,jdbcType=VARCHAR},
			</if>
			<if test="record.undcode != null">
				undCode = #{record.undcode,jdbcType=BIGINT},
			</if>
			<if test="record.transactiontype != null">
				transactionType = #{record.transactiontype,jdbcType=VARCHAR},
			</if>
			<if test="record.transactiondate != null">
				transactionDate = #{record.transactiondate,jdbcType=TIMESTAMP},
			</if>
			<if test="record.netvalue != null">
				netValue = #{record.netvalue,jdbcType=DOUBLE},
			</if>
			<if test="record.accumulatedNet != null">
				accumulated_Net = #{record.accumulatedNet,jdbcType=DOUBLE},
			</if>
			<if test="record.valuation != null">
				valuation = #{record.valuation,jdbcType=DOUBLE},
			</if>
			<if test="record.money != null">
				money = #{record.money,jdbcType=DOUBLE},
			</if>
			<if test="record.amountofmoney != null">
				amountOfMoney = #{record.amountofmoney,jdbcType=DOUBLE},
			</if>
			<if test="record.handlingfee != null">
				handlingFee = #{record.handlingfee,jdbcType=DOUBLE},
			</if>
			<if test="record.paytype != null">
				payType = #{record.paytype,jdbcType=VARCHAR},
			</if>
			<if test="record.bankcard != null">
				bankCard = #{record.bankcard,jdbcType=BIGINT},
			</if>
			<if test="record.banktype != null">
				bankType = #{record.banktype,jdbcType=VARCHAR},
			</if>
			<if test="record.dividendtype != null">
				dividendType = #{record.dividendtype,jdbcType=VARCHAR},
			</if>
			<if test="record.orderstatus != null">
				orderStatus = #{record.orderstatus,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update fund_order
		set fundorderId = #{record.fundorderid,jdbcType=BIGINT},
		fundID = #{record.fundid,jdbcType=BIGINT},
		userID = #{record.userid,jdbcType=BIGINT},
		fundName = #{record.fundname,jdbcType=VARCHAR},
		fundCompanyName = #{record.fundcompanyname,jdbcType=VARCHAR},
		undCode = #{record.undcode,jdbcType=BIGINT},
		transactionType = #{record.transactiontype,jdbcType=VARCHAR},
		transactionDate = #{record.transactiondate,jdbcType=TIMESTAMP},
		netValue = #{record.netvalue,jdbcType=DOUBLE},
		accumulated_Net = #{record.accumulatedNet,jdbcType=DOUBLE},
		valuation = #{record.valuation,jdbcType=DOUBLE},
		money = #{record.money,jdbcType=DOUBLE},
		amountOfMoney = #{record.amountofmoney,jdbcType=DOUBLE},
		handlingFee = #{record.handlingfee,jdbcType=DOUBLE},
		payType = #{record.paytype,jdbcType=VARCHAR},
		bankCard = #{record.bankcard,jdbcType=BIGINT},
		bankType = #{record.banktype,jdbcType=VARCHAR},
		dividendType = #{record.dividendtype,jdbcType=VARCHAR},
		orderStatus = #{record.orderstatus,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="cn.sz.gz.pojo.FundOrder">
		update fund_order
		<set>
			<if test="fundid != null">
				fundID = #{fundid,jdbcType=BIGINT},
			</if>
			<if test="userid != null">
				userID = #{userid,jdbcType=BIGINT},
			</if>
			<if test="fundname != null">
				fundName = #{fundname,jdbcType=VARCHAR},
			</if>
			<if test="fundcompanyname != null">
				fundCompanyName = #{fundcompanyname,jdbcType=VARCHAR},
			</if>
			<if test="undcode != null">
				undCode = #{undcode,jdbcType=BIGINT},
			</if>
			<if test="transactiontype != null">
				transactionType = #{transactiontype,jdbcType=VARCHAR},
			</if>
			<if test="transactiondate != null">
				transactionDate = #{transactiondate,jdbcType=TIMESTAMP},
			</if>
			<if test="netvalue != null">
				netValue = #{netvalue,jdbcType=DOUBLE},
			</if>
			<if test="accumulatedNet != null">
				accumulated_Net = #{accumulatedNet,jdbcType=DOUBLE},
			</if>
			<if test="valuation != null">
				valuation = #{valuation,jdbcType=DOUBLE},
			</if>
			<if test="money != null">
				money = #{money,jdbcType=DOUBLE},
			</if>
			<if test="amountofmoney != null">
				amountOfMoney = #{amountofmoney,jdbcType=DOUBLE},
			</if>
			<if test="handlingfee != null">
				handlingFee = #{handlingfee,jdbcType=DOUBLE},
			</if>
			<if test="paytype != null">
				payType = #{paytype,jdbcType=VARCHAR},
			</if>
			<if test="bankcard != null">
				bankCard = #{bankcard,jdbcType=BIGINT},
			</if>
			<if test="banktype != null">
				bankType = #{banktype,jdbcType=VARCHAR},
			</if>
			<if test="dividendtype != null">
				dividendType = #{dividendtype,jdbcType=VARCHAR},
			</if>
			<if test="orderstatus != null">
				orderStatus = #{orderstatus,jdbcType=VARCHAR},
			</if>
		</set>
		where fundorderId = #{fundorderid,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="cn.sz.gz.pojo.FundOrder">
		update fund_order
		set fundID = #{fundid,jdbcType=BIGINT},
		userID = #{userid,jdbcType=BIGINT},
		fundName = #{fundname,jdbcType=VARCHAR},
		fundCompanyName = #{fundcompanyname,jdbcType=VARCHAR},
		undCode = #{undcode,jdbcType=BIGINT},
		transactionType = #{transactiontype,jdbcType=VARCHAR},
		transactionDate = #{transactiondate,jdbcType=TIMESTAMP},
		netValue = #{netvalue,jdbcType=DOUBLE},
		accumulated_Net = #{accumulatedNet,jdbcType=DOUBLE},
		valuation = #{valuation,jdbcType=DOUBLE},
		money = #{money,jdbcType=DOUBLE},
		amountOfMoney = #{amountofmoney,jdbcType=DOUBLE},
		handlingFee = #{handlingfee,jdbcType=DOUBLE},
		payType = #{paytype,jdbcType=VARCHAR},
		bankCard = #{bankcard,jdbcType=BIGINT},
		bankType = #{banktype,jdbcType=VARCHAR},
		dividendType = #{dividendtype,jdbcType=VARCHAR},
		orderStatus = #{orderstatus,jdbcType=VARCHAR}
		where fundorderId = #{fundorderid,jdbcType=BIGINT}
	</update>
</mapper>